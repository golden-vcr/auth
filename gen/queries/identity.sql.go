// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: identity.sql

package queries

import (
	"context"
)

const recordUserLogin = `-- name: RecordUserLogin :exec
insert into auth.identity (
    twitch_user_id,
    twitch_display_name,
    first_logged_in_at,
    last_logged_in_at
) values (
    $1,
    $2,
    now(),
    now()
)
on conflict (twitch_user_id) do update set
    twitch_display_name = excluded.twitch_display_name,
    first_logged_in_at = coalesce(identity.first_logged_in_at, excluded.first_logged_in_at),
    last_logged_in_at = excluded.last_logged_in_at
`

type RecordUserLoginParams struct {
	TwitchUserID      string
	TwitchDisplayName string
}

func (q *Queries) RecordUserLogin(ctx context.Context, arg RecordUserLoginParams) error {
	_, err := q.db.ExecContext(ctx, recordUserLogin, arg.TwitchUserID, arg.TwitchDisplayName)
	return err
}
